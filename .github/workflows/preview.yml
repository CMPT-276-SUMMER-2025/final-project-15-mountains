name: Preview Deploy to Vercel

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  GH_TOKEN: ${{secrets.GH_TOKEN}}
  AI_TOKEN: ${{secrets.AI_TOKEN}}
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  

      - name: Install dependencies
        run: |
          cd src
          npm ci
          
      - name: Cache npm and Next.js build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            src/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('src/package-lock.json') }}-${{ hashFiles('src/**/*.js', 'src/**/*.jsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('src/package-lock.json') }}-

      - name: Install Playwright
        run: |
          cd src
          npx playwright install --with-deps 

      - name: Run Playwright tests
        run: |
          cd src
          npx playwright test

  deploy-preview:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm and Next.js build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            src/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('src/package-lock.json') }}-${{ hashFiles('src/**/*.js', 'src/**/*.jsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('src/package-lock.json') }}-


      - name: Install dependencies
        run: |
          cd src
          npm ci

      - name: Build
        run: |
          cd src
          npm run build

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Preview Deploy to Vercel 
        id: deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy --token="${{ secrets.VERCEL_TOKEN }}" --yes)
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "游릴游릴游릴   Deployed to: $DEPLOYMENT_URL   游릴游릴游릴"
      
